# -*- mode: ruby -*-
# vi: set ft=ruby :
 
Vagrant.configure("2") do |config|
 
  # 共通設定
  box_name = "dummy"
  box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
  ssh_username = "ec2-user"
 
  #---- ここからWebサーバ作る
  config.vm.define :web do |web|
    # EC2使う時も指定が必要なのでダミーを.
    web.vm.box = box_name
    web.vm.box_url = box_url

    # なぜか下記のprivate_ip_addressで設定する値と同じ値を設定する必要があります。
    web.ssh.host = "10.0.10.10"
    # ユーザー名の問題も同じです。内部のSSHでの接続の実装の問題な気がする。
    web.ssh.username = ssh_username

    web.vm.provider :aws do |aws, override|
      aws.access_key_id = ENV['AWS_ACCESS_KEY_ID']
      aws.secret_access_key = ENV['AWS_SECRET_KEY']
      aws.keypair_name = ENV['AWS_KEYPAIR_NAME']
      override.ssh.username = ssh_username
      override.ssh.private_key_path = ENV['AWS_PRIVATE_KEY_PATH']
 
      #---- VPC固有の設定 ----#
      # VPC内のローカルIPを指定します
      # Public Subnet内を指定した場合
      aws.private_ip_address = "10.0.10.10"
      # サブネットIDを指定します。
      aws.subnet_id = "subnet-11d7c378"
      # セキュリティグループを設定します。
      # ここではIDのリストを指定します
      aws.security_groups = ["sg-bfb7add3"]
      #---- VPC固有の設定ここまで ----#
 
      # タグを指定します(任意)
      aws.tags = aws.tags = { "Name" => "test", "env" => "dev", "role" => "db"}
      # リージョンを設定します
      aws.region = "ap-northeast-1"
      # アベイラビリティゾーンを設定する必要がある場合
      aws.availability_zone = "ap-northeast-1a"
      # この記事の冒頭で紹介した方法で作ったAMIのIDを指定します
      # 当たり前ですが、起動したいリージョンにあるAMIでないといけません
      aws.ami = "ami-a348dfa2"
      # インスタンスタイプを設定します
      aws.instance_type = "t1.micro"
      # このインスタンスにログインするユーザー名
      aws.ssh_username = "ec2-user"
    end
 
    web.vm.provision :chef_client do |chef|
      chef.chef_server_url = "https://chef.meguro.ryuzee.com:443"
      chef.validation_key_path = pathconv "#{ENV['HOME']}/.chef/chef-validator.pem"
      chef.environment = "development"
      chef.validation_client_name = "chef-validator"
      chef.client_key_path = "/etc/chef/client.pem"
      chef.add_role "web"
    end
  end
 
  #---- ここからDBサーバ作る
  config.vm.define :db do |db|
    # EC2使う時も指定が必要なのでダミーを.
    db.vm.box = box_name
    db.vm.box_url = box_url
    db.ssh.username = ssh_username

    # なぜか下記のprivate_ip_addressで設定する値と同じ値を設定する必要があります。
    db.ssh.host = "10.0.11.10"
    # ユーザー名の問題も同じです。内部のSSHでの接続の実装の問題な気がする。
    db.ssh.username = ssh_username
    db.vm.provider :aws do |aws, override|
      aws.access_key_id = ENV['AWS_ACCESS_KEY_ID']
      aws.secret_access_key = ENV['AWS_SECRET_KEY']
      aws.keypair_name = ENV['AWS_KEYPAIR_NAME']
      override.ssh.username = ssh_username
      override.ssh.private_key_path = ENV['AWS_PRIVATE_KEY_PATH']
 
      #---- VPC固有の設定 ----#
      # VPC内のローカルIPを指定します
      # Public Subnet内を指定した場合
      aws.private_ip_address = "10.0.11.10"
      # サブネットIDを指定します。
      aws.subnet_id = "subnet-e8d7c381"
      # セキュリティグループを設定します。
      # ここではIDのリストを指定します
      aws.security_groups = ["sg-bfb7add3"]
      #---- VPC固有の設定ここまで ----#
 
      # タグを指定します(任意)
      aws.tags = aws.tags = { "Name" => "test", "env" => "dev", "role" => "web"}
      # リージョンを設定します
      aws.region = "ap-northeast-1"
      # アベイラビリティゾーンを設定する必要がある場合
      aws.availability_zone = "ap-northeast-1c"
      # この記事の冒頭で紹介した方法で作ったAMIのIDを指定します
      # 当たり前ですが、起動したいリージョンにあるAMIでないといけません
      aws.ami = "ami-a348dfa2"
      # インスタンスタイプを設定します
      aws.instance_type = "t1.micro"
      # このインスタンスにログインするユーザー名
      aws.ssh_username = "ec2-user"
    end
 
    db.vm.provision :chef_client do |chef|
      chef.chef_server_url = "https://chef.meguro.ryuzee.com:443"
      chef.validation_key_path = pathconv "#{ENV['HOME']}/.chef/chef-validator.pem"
      chef.environment = "development"
      chef.validation_client_name = "chef-validator"
      chef.client_key_path = "/etc/chef/client.pem"
      chef.add_role "db"
    end
  end
end

def pathconv(path)
  if(RUBY_PLATFORM.downcase =~ /mswin(?!ce)|mingw|cygwin|bccwin/)
    path = path.gsub('/', '\\')
  end
  path
end

